@page "/Shared/CustomFieldGroupValues"
@attribute [Authorize]


    @foreach (var customFieldRow in CustomFieldRows)
    {
    <div class="row">

        @foreach (var customFieldHeaderRowField in customFieldRow.CustomFieldHeaderRowFields)
        {
            <div class="col-md-6">
                <div class="form-group">
                    <label for="@customFieldHeaderRowField.customFieldHeader.Id">@customFieldHeaderRowField.customFieldHeader.Name</label>
                    <input id="@customFieldHeaderRowField.customFieldHeader.Id" type="text" class="form-control" value="@customFieldHeaderRowField.customFieldValue.FieldValue" />
                </div>
            </div>
        }
    </div>
    }


@code {

    int fieldRowMax = 2;
    List<CustomFieldHeaderRow> CustomFieldRows = new List<CustomFieldHeaderRow>();

    [Parameter]
    public CustomFieldGroupValuesModel customFieldGroupValuesModel { get; set; }

    protected override Task OnInitializedAsync()
    {

        CustomFieldRows = GetRows();

        return base.OnInitializedAsync();
    }

    private List<CustomFieldHeaderRow> GetRows()
    {
        var customFieldHeaderRows = new List<CustomFieldHeaderRow>();
        int fieldCounter = 0;
        bool addCurrentRow = false;

        var currentRow = new CustomFieldHeaderRow();

        foreach (var currentCustomFieldHeader in customFieldGroupValuesModel.customFieldGroupHeader.CustomFieldHeaders)
        {
            if(fieldCounter == fieldRowMax)
            {
                customFieldHeaderRows.Add(currentRow);
                fieldCounter = 0;
                currentRow = new CustomFieldHeaderRow();
            }

            var customFieldHeaderRowField = new CustomFieldHeaderRowField()
            {
                customFieldHeader = currentCustomFieldHeader
            };

            var customFieldValue = customFieldGroupValuesModel.CustomFieldValues.Where(v => v.CustomFieldHeaderId == currentCustomFieldHeader.CustomFieldGroupHeaderId).FirstOrDefault();

            if(customFieldValue == default)
            {
                customFieldValue = new CustomFieldVal()
                {
                    CustomFieldHeaderId = customFieldHeaderRowField.customFieldHeader.Id,
                    Id = Guid.Empty,
                    StringValue = string.Empty
                };
            }

            customFieldHeaderRowField.customFieldValue = customFieldValue;

            currentRow.CustomFieldHeaderRowFields.Add(customFieldHeaderRowField);

            fieldCounter++;

            addCurrentRow = true;
        }

        if (addCurrentRow)
            customFieldHeaderRows.Add(currentRow);

        return customFieldHeaderRows;
    }
}
