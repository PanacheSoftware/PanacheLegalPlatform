@page "/team/teams"
@attribute [Authorize]
@inject FoundationService MyFoundationService
@inject TokenProvider TokenProvider
@using PanacheSoftware.Core.Domain.API.Team;

<Breadcrumb>
    <BreadcrumbItem>
        <BreadcrumbLink To="dashboard">@LanguageHelper.GetTitle(langQueryList, 10121)</BreadcrumbLink>
    </BreadcrumbItem>
    <BreadcrumbItem Active="true">
        <BreadcrumbLink>@LanguageHelper.GetTitle(langQueryList, 10108)</BreadcrumbLink>
    </BreadcrumbItem>
</Breadcrumb>

<Card Margin="Margin.Is4.OnY">
    <CardHeader>
        <CardTitle>@LanguageHelper.GetTitle(langQueryList, 10108)</CardTitle>
    </CardHeader>
    <CardBody>
        @if (teamList != null)
        {
            <DataGrid TItem="TeamHead"
                      Data="@teamList.TeamHeaders"
                      Filterable="true"
                      FilterMethod="DataGridFilterMethod.StartsWith"
                      PageSize="25"
                      Striped="true"
                      Bordered="true"
                      Hoverable="true"
                      Responsive="true"
                      ShowPager="true"
                      PagerPosition="DataGridPagerPosition.Bottom"
                      ShowPageSizes="true">
                <DataGridCommandColumn TItem="TeamHead" Width="170px" />
                <DataGridColumn TItem="TeamHead" Field="@nameof(TeamHead.ShortName)" Caption="@LanguageHelper.GetTitle(langQueryList, 10400)" />
                <DataGridColumn TItem="TeamHead" Field="@nameof(TeamHead.LongName)" Caption="@LanguageHelper.GetTitle(langQueryList, 10401)" />
                <DataGridColumn TItem="TeamHead" Field="@nameof(TeamHead.Description)" Caption="@LanguageHelper.GetTitle(langQueryList, 10200)" />
                <DataGridColumn TItem="TeamHead" Field="@nameof(TeamHead.Status)" Caption="@LanguageHelper.GetTitle(langQueryList, 10201)" />
                <DataGridColumn TItem="TeamHead" Field="@nameof(TeamHead.DateFrom)" Caption="@LanguageHelper.GetTitle(langQueryList, 10202)" DisplayFormat="{0:dd/MM/yyyy}" />
                <DataGridColumn TItem="TeamHead" Field="@nameof(TeamHead.DateTo)" Caption="@LanguageHelper.GetTitle(langQueryList, 10203)" DisplayFormat="{0:dd/MM/yyyy}" />
            </DataGrid>
        }
        else
        {
            <p>Loading...</p>
        }
    </CardBody>
</Card>

@code {
    LangQueryList langQueryList { get; set; }
    TeamList teamList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetLanguageList();
    }

    private async Task GetLanguageList()
    {
        var textCodes = new List<long>();
        textCodes.Add(10121);
        textCodes.Add(10108);
        textCodes.Add(10400);
        textCodes.Add(10401);
        textCodes.Add(10200);
        textCodes.Add(10201);
        textCodes.Add(10202);
        textCodes.Add(10203);
        textCodes.Add(10204);

        langQueryList = await MyFoundationService.GetLanguageInfo(TokenProvider.AccessToken, textCodes.ToArray());

        await GetTeams();
    }

    private async Task GetTeams()
    {
        var response = await MyFoundationService.MakeAPICallAsync(TokenProvider.AccessToken, HttpMethod.Get, APITypes.TEAM, $"Team");

        if (response.StatusCode == System.Net.HttpStatusCode.OK)
        {
            teamList = response.ContentAsType<TeamList>();
        }
        else
        {
            teamList = new TeamList();
        }
    }
}