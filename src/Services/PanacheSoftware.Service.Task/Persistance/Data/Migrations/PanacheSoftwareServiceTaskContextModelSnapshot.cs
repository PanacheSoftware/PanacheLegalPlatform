// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PanacheSoftware.Service.Task.Persistance.Context;

namespace PanacheSoftware.Service.Task.Persistance.Data.Migrations
{
    [DbContext(typeof(PanacheSoftwareServiceTaskContext))]
    partial class PanacheSoftwareServiceTaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastUpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TaskHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskHeaderId")
                        .IsUnique();

                    b.ToTable("TaskDetail");
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskGroupDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LastUpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TaskGroupHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TaskGroupHeaderId")
                        .IsUnique();

                    b.ToTable("TaskGroupDetail");
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskGroupHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CompletedOnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastUpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LongName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MainUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OriginalCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OriginalStartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ParentTaskGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TeamHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ParentTaskGroupId");

                    b.ToTable("TaskGroupHeader");
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CompletedOnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LastUpdateBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MainUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OriginalCompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OriginalStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TaskGroupHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaskType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TaskGroupHeaderId");

                    b.ToTable("TaskHeader");
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskDetail", b =>
                {
                    b.HasOne("PanacheSoftware.Core.Domain.Task.TaskHeader", "TaskHeader")
                        .WithOne("TaskDetail")
                        .HasForeignKey("PanacheSoftware.Core.Domain.Task.TaskDetail", "TaskHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskGroupDetail", b =>
                {
                    b.HasOne("PanacheSoftware.Core.Domain.Task.TaskGroupHeader", "TaskGroupHeader")
                        .WithOne("TaskGroupDetail")
                        .HasForeignKey("PanacheSoftware.Core.Domain.Task.TaskGroupDetail", "TaskGroupHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskGroupHeader", b =>
                {
                    b.HasOne("PanacheSoftware.Core.Domain.Task.TaskGroupHeader", "ParentTaskGroup")
                        .WithMany("ChildTaskGroups")
                        .HasForeignKey("ParentTaskGroupId");
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskHeader", b =>
                {
                    b.HasOne("PanacheSoftware.Core.Domain.Task.TaskGroupHeader", "TaskGroupHeader")
                        .WithMany("ChildTasks")
                        .HasForeignKey("TaskGroupHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
