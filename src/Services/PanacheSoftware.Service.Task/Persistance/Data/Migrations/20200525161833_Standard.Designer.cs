// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PanacheSoftware.Service.Task.Persistance.Context;

namespace PanacheSoftware.Service.Task.Persistance.Data.Migrations
{
    [DbContext(typeof(PanacheSoftwareServiceTaskContext))]
    [Migration("20200525161833_Standard")]
    partial class Standard
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "0.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskDetail", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("LastUpdateBy");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("TaskHeaderId");

                    b.Property<Guid>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TaskHeaderId")
                        .IsUnique();

                    b.ToTable("TaskDetail");
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskGroupDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("LastUpdateBy");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("TaskGroupHeaderId");

                    b.Property<Guid>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("TaskGroupHeaderId")
                        .IsUnique();

                    b.ToTable("TaskGroupDetail");
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskGroupHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClientHeaderId");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CompletedOnDate");

                    b.Property<DateTime>("CompletionDate");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid>("LastUpdateBy");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<string>("LongName")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("MainUserId");

                    b.Property<DateTime>("OriginalCompletionDate");

                    b.Property<DateTime>("OriginalStartDate");

                    b.Property<Guid?>("ParentTaskGroupId");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("TeamHeaderId");

                    b.Property<Guid>("TenantId");

                    b.HasKey("Id");

                    b.HasIndex("ParentTaskGroupId");

                    b.ToTable("TaskGroupHeader");
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CompletedOnDate");

                    b.Property<DateTime>("CompletionDate");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(4000)");

                    b.Property<Guid>("LastUpdateBy");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<Guid>("MainUserId");

                    b.Property<DateTime>("OriginalCompletionDate");

                    b.Property<DateTime>("OriginalStartDate");

                    b.Property<int>("SequenceNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("TaskGroupHeaderId");

                    b.Property<string>("TaskType")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("TenantId");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("TaskGroupHeaderId");

                    b.ToTable("TaskHeader");
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskDetail", b =>
                {
                    b.HasOne("PanacheSoftware.Core.Domain.Task.TaskHeader", "TaskHeader")
                        .WithOne("TaskDetail")
                        .HasForeignKey("PanacheSoftware.Core.Domain.Task.TaskDetail", "TaskHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskGroupDetail", b =>
                {
                    b.HasOne("PanacheSoftware.Core.Domain.Task.TaskGroupHeader", "TaskGroupHeader")
                        .WithOne("TaskGroupDetail")
                        .HasForeignKey("PanacheSoftware.Core.Domain.Task.TaskGroupDetail", "TaskGroupHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskGroupHeader", b =>
                {
                    b.HasOne("PanacheSoftware.Core.Domain.Task.TaskGroupHeader", "ParentTaskGroup")
                        .WithMany("ChildTaskGroups")
                        .HasForeignKey("ParentTaskGroupId");
                });

            modelBuilder.Entity("PanacheSoftware.Core.Domain.Task.TaskHeader", b =>
                {
                    b.HasOne("PanacheSoftware.Core.Domain.Task.TaskGroupHeader", "TaskGroupHeader")
                        .WithMany("ChildTasks")
                        .HasForeignKey("TaskGroupHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
